Move and Damage Properties Changes (3/9/17)
-------------------------------------------
Our current move and damage properties serve us well, but we need to separate them and add more
properties to allow handling for any action in the first two Paper Mario games.

A list of what we need in battle for each move:

-Name
-Description
-Resource (FP, SP), Cost (Ex. 3 FP, 1 SP), and CostDisplayType (Shown, Hidden, Special)
  -Hidden would be used for all the items after choosing Double or Triple Dip. Special is used to indicate reduced FP costs and such.
-Icon
-Selection type (Front, Single, All)
-Move affection type (None, Self, Ally, Enemy)
  -This would help cover any case we need:
    -None would simply perform the action, bypassing target selection. Used for moves like Focus
	-Self would target only the user of the move
	-Ally would target the allies of the user, including the user. This adapts to the type of entity using it
	-Enemy would target all enemies of the user. This adapts to the type of entity using it
  -This prevents always having to override OnMenuSelected() for None or Self, and Ally and Enemy's adaptability makes things clearer 
-HeightStates affected
-Uses Charge
  -This is in here so any move can potentially utilize the Charge instead of just damaging moves
-Item Steal (None, Coin, Item, Badge, Any)
  -Coin for Bandits, Coin/Item for Big Bandits, Badge for Badge Bandits, and Any for Ms. Mowz' Kiss Thief move
  -This is in here because Kiss Thief can steal but doesn't do damage
-Healing Info
-Damage Info

The last, Damage Info, is currently an InteractionParamHolder, which currently has the following fields:

public BattleEntity Attacker;
public BattleEntity Victim;
public int Damage;
public Enumerations.Elements DamagingElement;
public bool Piercing;
public Enumerations.ContactTypes ContactType;
public StatusEffect[] Statuses;

The first two are unnecessary because they are filled out later, so they should be removed. The rest are needed, but A LOT is still missing.
We'll need to use an entirely different struct which has more information.

For one, the ContactTypes enum should be changed to just have None or Direct. HammerContact isn't used and doesn't make sense since
Hammer moves don't make contact. The idea behind adding it was to indicate moves attacking from the side, but there are better ways to do that
and we'll get to it another time.

We need the following additional fields, some of which aren't implemented in the system yet. The goal is to get an idea of what is needed
so when these are implemented, it's only a matter of putting them in.

-Affected by All or Nothing
-Can't Miss
  -This will be used for Crystal Star Special Moves, which can hit Invisible entities
-Overrides Defensive Actions (None, Guard, Superguard, All)
  -None indicates that the move can be Guarded or Superguarded. All means the move can't be Guarded or Superguarded.
-Damage Effects (Flips Shelled, Removes Wings, Removes Segment, Flips Clefts, Spins Out) - can have multiple at a time
  -Flips Shelled flips any shelled enemies over when hit, provided they can be flipped
  -Removes Wings knocks any flying enemies to the ground and removes their ability to fly, provided they have wings or can be hit to the ground
    -The same is true with Stilt Guys, who act very similar to flying enemies
  -Removes Segment would be used for Kooper and Koops' shell moves, Super/Ultra Hammer, and Spin Smash against Pokeys and Shy Stacks
  -Flips Clefts flips any enemies that are typically flipped with explosions instead of jumping (Ex. Clefts, Bristles), providing they can be flipped
  -Spins Out would be used for Spin Smash and Super/Ultra Hammer against Kent C. Koopa, who drops coins when hit with Spin Smash. I don't know
   of any other situations this would be used.
